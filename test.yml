---
- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    lock_file: "/home/fortran/playbooks/operation.lock"
  tasks:
    - name: Check that the operation.lock exists
      stat:
        path: "{{ lock_file }}"
      register: stat_result
    - debug:
        msg: "{{stat_result}}"
        
    - name: Abort execution, if the file exist already
      fail: 
        msg: The file {{ lock_file }} exist already
      when: stat_result.stat.exists 

    - name: Create the file, if it doesnt exist already
      file:
        path: "{{ lock_file }}"
        state: touch
      when: not stat_result.stat.exists
      
    - pause:
        minutes: 1
        
    - name: Remove file
      file:
        path: "{{ lock_file }}"
        state: absent
      when: not stat_result.stat.exists

    - name: Validate if a String is present in the file.
      lineinfile:
        path: /home/fortran/playbooks/uname.txt
        line: "LogLevel debug"
        state: absent
      check_mode: yes
      register: state_out
    - debug:
        msg: "Debug is not enable"
      when: state_out is not changed
      
      
      
        tasks:
    - name: Check that the log file exists
      stat:
       path: /home/fortran/playbooks/uname.txt
      retries: 100
      delay: 5
      register: stat_result
      until: stat_result.stat.exists == true
    - debug:
        msg: "{{ stat_result.stat.exists }}"

    - name: Validate if a String is present in the file.
      lineinfile:
        path: /home/fortran/playbooks/uname.txt
        line: "LogLevel debug"
      check_mode: yes
      retries: 100
      delay: 5
      register: presence
      until: presence is defined and presence.changed==false
      ignore_errors: yes
    - debug:
        msg: "{{ presence }}"
        
        
     - name: Read file "{{ log_file }}" from the remote machine with cat
  shell: cat "{{ log_file }}"
  register: em_c8yda_install_log_cat
- debug: 
    msg: "{{ em_c8yda_install_log_cat.stdout }}"
         
